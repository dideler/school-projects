The printing queue adheres to the following rules:
• Smaller print jobs (in terms of pages) should be printed first
• The printer can only print one job at a time and has infinite memory
• The printer can print 4 pages/minute in colour and 8 pages/minute in black & white

The program performs a simulation based on the input and outputs a transcript of events that occur sorted by time.

The input is provided in a file called “input.txt” which contains one print job per line.
Each job is defined by:
• ID
• Relative arrival time (the number of seconds after the arrival of the previous job)
• Number of pages
• Type (whether it’s colour or black & white)

E.g.    1   0   10  black
        2   5   5   colour
        3   20  2   black
        ...

In the above example, the first job (10 pages black & white) arrives immediately. The second job (5
pages colour) arrives 5 seconds after the arrival of job #1. The third job (2 pages black & white)
arrives 20 seconds after job #2.

Output is written to a file called “output.txt” and looks like the following:

0 seconds   job #1 arrives            10/black
0 seconds   job #1 starts printing    10/black
5 seconds   job #2 arrives            5/colour
25 seconds  job #3 arrives            2/black
75 seconds  job #1 finished printing  10/black
75 seconds  job #3 starts printing    2/black
...


To compile and run the program:
  $ javac -d . *.java && java -cp . printQueue.Main


Copyleft (ɔ) 2008
